{
  "name": "firebase-util",
  "description": "A set of experimental power tools for Firebase.",
  "version": "0.0.0",
  "author": {
    "name": "Firebase",
    "email": "support@firebase.com",
    "url": "https://www.firebase.com/"
  },
  "homepage": "https://github.com/firebase/firebase-util",
  "repository": {
    "type": "git",
    "url": "https://github.com/firebase/firebase-util.git"
  },
  "bugs": {
    "url": "https://github.com/firebase/firebase-util/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://firebase.mit-license.org/"
    }
  ],
  "keywords": [
    "firebase",
    "realtime",
    "utilities"
  ],
  "main": "dist/firebase-util.min.js",
  "files": [
    "dist/**",
    "LICENSE",
    "README.md",
    "package.json"
  ],
  "dependencies": {
    "firebase": "1.0.x"
  },
  "devDependencies": {
    "JQDeferred": "~1.9.1",
    "chai": "~1.8.0",
    "firebase-token-generator": "~0.1.4",
    "grunt": "~0.4.1",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-jshint": "~0.6.2",
    "grunt-contrib-uglify": "~0.2.2",
    "grunt-contrib-watch": "~0.5.1",
    "grunt-exec": "~0.4.2",
    "grunt-mocha-test": "~0.8.1",
    "grunt-notify": "~0.2.7",
    "request": "~2.27.0",
    "sinon": "~1.7.3",
    "sinon-chai": "~2.4.0"
  },
  "scripts": {
    "test": "grunt test",
    "make": "grunt make",
    "watch": "grunt watch",
    "travis": "grunt"
  },
  "readme": "# Firebase-util\n\n[![Build Status](https://travis-ci.org/firebase/firebase-util.svg?branch=master)](https://travis-ci.org/firebase/firebase-util)\n[![Coverage Status](https://img.shields.io/coveralls/firebase/firebase-util.svg)](https://coveralls.io/r/firebase/firebase-util)\n[![Version](https://badge.fury.io/gh/firebase%2Ffirebase-util.svg)](http://badge.fury.io/gh/firebase%2Ffirebase-util)\n\n\nThis is a collection of power toys (mostly experimental) for use in Firebase. Right now it consists of one library.\n\n## Libraries\n\n - [Firebase.util.join](src/join/README.md)\n   Sync to multiple Firebase paths and seamlessly merge the data into a single object. You can use most of your favorite\n   Firbebase methods (on, once, set, etc) normally. The merged data is distributed back to the responsible paths\n   during set/update/remove ops.\n\n# Usage\n\n## Setup\n\n### On the web:\n\n```html\n<script src=\"http://static.firebase.com/v0/firebase.js\"></script>\n<script src=\"firebase-util.min.js\"></script>\n\n<script>\n   var ref = Firebase.util.join( new Firebase(PATH1), new Firebase(PATH2), ... );\n   ref.on('child_added', function(snap) { console.log(snap.val()); });\n</script>\n```\n\n### In node.js:\n\n```javascript\nvar Firebase = require('firebase');\nvar FirebaseUtil = require('./firebase-util.js');\nvar ref = FirebaseUtil.join( new Firebase(PATH1), new Firebase(PATH2), ... );\nref.on('child_added', function(snap) { console.log(snap.val()); });\n```\n\n# Global Utilities\n\n## Firebase.util.logLevel(int)\n\nLog debugging info to JavaScript console (or command line in node.js). Defaults to 'warn' (errors and warnings).\nThis can be set or changed at any time to any of the following:\n\n```javascript\nFirebase.util.logLevel(true);  // default logging (also accepts 'all' or 'on')\nFirebase.util.logLevel(false); // all logging off (also accepts 0, 'off' or 'none')\nFirebase.util.logLevel('error'); // error, warn, info, log, or debug\n```\n\nDebugging can also be enabled in the browser by adding `debugLevel=x` into the url's query parameters. This allows one to turn on debugging for quick troubleshooting without having to modify any code.\n\nThe logLevel() method returns a `revert` function that can be used to restore the logging level to it's previous value:\n\n```javascript\n// log a whole lotta junk\nvar revert = Firebase.util.logLevel('debug');\n\n// ...run some code...\n\n// revert to default logging\nrevert();\n```\n\nYou can also filter log output with a RegExp:\n\n```javascript\n// only print logs that begin with \"Path\"\nFirebase.util.logLevel('debug', /^Path/);\n```\n\n# Contributing\n\n## Setup\n\nIf you don't have [Grunt](http://gruntjs.com/) installed, do it like so\n\n```bash\nnpm install -g grunt\n```\n\n[Fork this project](https://help.github.com/articles/fork-a-repo) into your own GitHub repo\n\n```bash\ngit clone https://github.com/YOURNAME/firebase-util.git\ncd firebase-util\nnpm install\n```\n\nDeclare environment variables for testing. In Mac/Linux:\n\n```bash\nFIREBASE_TEST_URL=\"https://INSTANCE.firebaseio.com\"\nFIREBASE_TEST_SECRET=\"xxoXaABB28...\"\n```\n\n(For DOS use `set VAR=value`, for PowerShell, use `$env:VAR=value`)\n\nSet security rules on your development Firebase as follows:\n\n```json\n{\n  \"rules\": {\n    \".read\": \"auth.id !== null\",\n    \".write\": \"auth.id !== null\"\n  }\n}\n```\n\nMake project, monitor for changes, and automagically run test units:\n\n```bash\ngrunt\n```\n\n## Best Practices\n\nRead the [README.md under src/](src/README.md) for an overview of the standards, code structure, and utilities for development.\n\n## Testing\n\nAdd test cases to cover any new code you create. Make sure all test cases pass before committing changes.\nYou must declare `FIREBASE_TEST_URL` and `FIREBASE_TEST_SECRET` first. (see setup).\n\nYou can run all test units at any time using `grunt test` or automagically after changes by using `grunt watch`.\n\nRead the [README.md under test/](test/README.md) for details about test standards, structure, and helper methods.\n\n## Committing changes\n\nSee [Using Pull Requests](https://help.github.com/articles/using-pull-requests).\n\nBefore submitting your pull requests, make sure your code meets the following criteria:\n\n - all test units for all packages must pass (100% success rate)\n - all public methods in your package must include a complete set of test cases\n - README.md must be complete and include summary, examples, and API details\n\n<a name=\"license\"></a>\n# LICENSE\n\n[The MIT LICENSE (MIT)](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "_id": "firebase-util@0.0.0",
  "_shasum": "df35d494c3a3e1e9336aef2ab1bd46f9d3374fb5",
  "_resolved": "git://github.com/firebase/firebase-util#5f289daf965169689ffe673669ad19e90c35ed7c",
  "_from": "git://github.com/firebase/firebase-util",
  "_fromGithub": true
}
